Index: layout/meta.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><html lang=\"ru\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title><?= $page_title ?></title>\n  <script>\n    // const baseApi = \"http://fratteli/app\"\n    const baseApi = \"http://localhost/app\"\n\n  </script>\n  <script src=\"../js/popup.js\"></script>\n  <script>\n    window.onload = function() {\n      initExitPopup();\n    };\n  </script>\n  <link rel=\"stylesheet\" href=\"../styles/css/components/popup.css\">\n  <link rel=\"stylesheet\" href=\"../styles/css/reset.css\">\n  <link rel=\"stylesheet\" href=\"../styles/css/fonts.css\">\n  <link rel=\"stylesheet\" href=\"../styles/css/coolicons.css\">\n  <link rel=\"stylesheet\" href=\"../styles/css/all.css\">\n  <link rel=\"stylesheet\" href=\"../styles/css/slick.css\">\n  <link rel=\"stylesheet\" href=\"../styles/css/slick-theme.css\">\n  \n  <style>\n  \n    .test_level {\n      background: #41BBFF;\n      border-radius: 12px;\n      display: inline-block;\n      padding: 15px;\n      font-style: normal;\n      font-weight: 600;\n      font-size: 16px;\n      line-height: 26px;\n      color: #fff;\n      margin: 20px 0;\n    }\n\n    .answers-container {\n      padding: 10px;\n      display: flex;\n      flex-direction: column;\n    }\n    .answer-item {\n      width: 300px;\n    }\n    .answer-item input[type=\"text\"] {\n      width: 100px;\n    }\n    .questions-desc {\n      border: 2px solid #ececec;\n      border-radius: 10px;\n      padding: 5px;\n    }\n    #testContainer{\n      width: 500px;\n    }\n\n    body {\n      background-color: #f1f1f8;\n    }\n\n    input[type=\"text\"] {\n      width: 200px;\n      border: 2px solid #cccccc;\n      outline: none;\n      border-radius: 5px;\n      padding: 3px;\n    }\n\n    input[type=\"text\"]:hover {\n      border: 2px solid #454545;\n    }\n  </style>\n</head>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/layout/meta.php b/layout/meta.php
--- a/layout/meta.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/layout/meta.php	(date 1654102640064)
@@ -8,6 +8,7 @@
   <script>
     // const baseApi = "http://fratteli/app"
     const baseApi = "http://localhost/app"
+    const user = <?= json_encode($_SESSION['user']) ?>
 
   </script>
   <script src="../js/popup.js"></script>
Index: js/quiz/get-one-quiz.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const fetchTestById = async (test_id) => {\n    const res = await fetch(`${baseApi}/test/get-test.php?test_id=${test_id}`);\n    return res.json();\n}\n\n\nconst body = document.getElementsByTagName(\"body\")[0];\nconst renderTest = async () => {\n    const testContainer = document.getElementById(\"testContainer\");\n\n    const params = new URLSearchParams(window.location.search);\n    const testData = await fetchTestById(params.get(\"test_id\"));\n\n    const testTitle = document.createElement(\"h2\");\n    testTitle.innerText = testData.test_title;\n\n    testContainer.appendChild(testTitle);\n\n    const testLevel = document.createElement(\"div\");\n    testLevel.setAttribute(\"class\", \"test_level\")\n    testLevel.innerText = testData.test_level;\n\n    testContainer.appendChild(testLevel);\n\n    const questionsContainer = document.createElement(\"div\");\n\n    testData.questions.forEach(q => {\n        const questionTitle = document.createElement(\"h3\");\n        questionTitle.innerText = q.question_title;\n\n        const answersContainer = document.createElement(\"div\");\n        answersContainer.setAttribute(\"class\", \"answers-container\");\n        const questionDesc = document.createElement(\"p\");\n        questionDesc.setAttribute(\"class\", \"questions-desc\");\n        questionDesc.innerText = q.question_desc;\n\n        if (q.type === \"0\") {\n            q.answers.forEach(a => {\n                const option = document.createElement(\"input\");\n                option.setAttribute(\"type\", \"radio\");\n                option.setAttribute(\"id\", `answer`);\n                option.setAttribute(\"value\", a.answer_id);\n                option.setAttribute(\"name\", `question${a.question_id}`);\n    \n                const optionLabel = document.createElement(\"label\");\n                optionLabel.setAttribute(\"for\", `answer-${a.answer_id}`);\n                optionLabel.innerText = a.answer_title;\n\n                const optionsContainer = document.createElement(\"div\");\n                optionsContainer.setAttribute(\"class\", \"answer-item\");\n    \n\n\n                optionsContainer.appendChild(option);\n                optionsContainer.appendChild(optionLabel);\n\n                answersContainer.appendChild(optionsContainer);\n            });\n        } else if (q.type === \"1\") {\n            const inputAnswer = document.createElement(\"input\");\n            inputAnswer.setAttribute(\"type\", \"text\");\n            inputAnswer.setAttribute(\"id\", `answer-text`);\n\n            answersContainer.appendChild(inputAnswer);\n        }\n\n        \n\n        \n        questionsContainer.appendChild(questionTitle);\n        questionsContainer.appendChild(questionDesc);\n        questionsContainer.appendChild(answersContainer);\n    });\n\n\n    const sendTestBtn = document.createElement(\"button\");\n    sendTestBtn.innerText = \"Заверщить\";\n\n    testContainer.appendChild(questionsContainer);\n    testContainer.appendChild(sendTestBtn);\n\n    let answer_ids = [];\n    \n    sendTestBtn.addEventListener(\"click\", async () => {\n        const optionsChecked = document.querySelectorAll(\"input[type=radio]:checked\");\n        const answersText = document.querySelectorAll(\"#answer-text\");\n        options_ids = [].map.call(optionsChecked, r => r.value);\n        textAnswersValues = [].map.call(answersText, r => r.value);\n\n        const res = await fetch(`${baseApi}/test/save-result.php`, {\n            method: 'POST',\n            body: JSON.stringify({\n                answer_ids: [...options_ids, ...textAnswersValues],\n                test_id: testData.test_id,\n            })\n        }); \n\n        const result = await res.json();\n        console.log(result)\n        const resultDiv = document.querySelector('#result')\n        resultDiv.innerHTML = ''\n        resultDiv.innerHTML = `\n        <h2>Правильных ответов:</h2>\n        <h3>${result.count_correct}/${result.count_questions}</h3>\n        <h2>Оценка:</h2>\n        <h3>${result.rating}</h3>\n        <h2>Статус:</h2>\n        <h3>${result.success}</h3>\n        `\n    });\n\n\n};\n\n\nbody.addEventListener(\"load\", renderTest(), false);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/quiz/get-one-quiz.js b/js/quiz/get-one-quiz.js
--- a/js/quiz/get-one-quiz.js	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/js/quiz/get-one-quiz.js	(date 1654103590017)
@@ -1,3 +1,5 @@
+const isTeacher = user?.role === 'teacher';
+
 const fetchTestById = async (test_id) => {
     const res = await fetch(`${baseApi}/test/get-test.php?test_id=${test_id}`);
     return res.json();
@@ -9,7 +11,7 @@
     const testContainer = document.getElementById("testContainer");
 
     const params = new URLSearchParams(window.location.search);
-    const testData = await fetchTestById(params.get("test_id"));
+    const testData = await fetchTestById(params.get("test_id") ?? 47);
 
     const testTitle = document.createElement("h2");
     testTitle.innerText = testData.test_title;
@@ -50,8 +52,7 @@
                 optionsContainer.setAttribute("class", "answer-item");
     
 
-
-                optionsContainer.appendChild(option);
+                if (!isTeacher) optionsContainer.appendChild(option);
                 optionsContainer.appendChild(optionLabel);
 
                 answersContainer.appendChild(optionsContainer);
@@ -61,12 +62,9 @@
             inputAnswer.setAttribute("type", "text");
             inputAnswer.setAttribute("id", `answer-text`);
 
-            answersContainer.appendChild(inputAnswer);
+            if (!isTeacher) answersContainer.appendChild(inputAnswer);
         }
 
-        
-
-        
         questionsContainer.appendChild(questionTitle);
         questionsContainer.appendChild(questionDesc);
         questionsContainer.appendChild(answersContainer);
@@ -77,7 +75,7 @@
     sendTestBtn.innerText = "Заверщить";
 
     testContainer.appendChild(questionsContainer);
-    testContainer.appendChild(sendTestBtn);
+    if (!isTeacher) testContainer.appendChild(sendTestBtn);
 
     let answer_ids = [];
     
Index: web/signup.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nsession_start();\n\nif ($_SESSION['user']) {\n  header('location: /web/lessons.php');\n}\n\n$page_title = \"Регистрация\";\n\n?>\n\n<?php include \"../layout/meta.php\"; ?>\n\n\n<body>\n  <main class=\"sign sign-up\">\n    <section class=\"sign__container\" data-signUp>\n      <header class=\"sign__header\">\n        <header class=\"sign__logo\">\n          <img class=\"sign__logo-img\" src=\"/assets/img/logo.png\" alt=\"Fratelli\">\n        </header>\n        <div class=\"sign__header-title\">\n          Добро пожаловать!\n        </div>\n        <div class=\"sign__subtitle\">\n          <span>Начните свое итальянское путешествие!</span>\n          <span>Есть аккаунт? <a class=\"sign__link\" href=\"/web/signin.php\">Войдите прямо сейчас!</a></span>\n        </div>\n      </header>\n      <form class=\"form form-sign\" action=\"\" id=\"signUp\">\n        <div class=\"form__fields\">\n          <div class=\"form__item input_field_email\">\n            <input class=\"form__input\" name=\"email\" type=\"email\" placeholder=\"Email\" required>\n            <div class=\"form_input_error_text\">Пользователь с таким email уже зарегистрирован</div>\n          </div>\n          <div class=\"form__item\">\n            <input class=\"form__input\" name=\"name\" type=\"text\" placeholder=\"Имя пользователя\" required>\n          </div>\n          <div class=\"form__item input_field_password\">\n            <input class=\"form__input\" name=\"password\" type=\"password\" placeholder=\"Пароль\" required>\n            <div class=\"form_input_error_text\">Пароль должен быть не менее 6 символов, содержать буквы и цифры</div>\n            <i id=\"viewField\" class=\"form__item-icon ci-hide\"></i>\n          </div>\n          <div class=\"form__item input_field_password_repeat\">\n            <input class=\"form__input\" name=\"passwordRepeat\" type=\"password\" placeholder=\"Подтвердите пароль\" required>\n            <div class=\"form_input_error_text\">Пароли должны совпадать</div>\n          </div>\n        </div>\n        <button class=\"form__btn\">\n          Зарегистрироваться\n        </button>\n      </form>\n    </section>\n\n    <section class=\"sign__container\" data-signRole>\n      <header class=\"sign__header\">\n        <header class=\"sign__logo\">\n          <img class=\"sign__logo-img\" src=\"/assets/img/logo.png\" alt=\"Fratelli\">\n        </header>\n        <div class=\"sign__header-title\">\n          Выберите роль:\n        </div>\n        <div class=\"sign__subtitle\">\n          <span>Начните свое итальянское путешествие!</span>\n          <span>Есть аккаунт? <a class=\"sign__link\" href=\"/web/signin.html\">Войдите прямо сейчас!</a></span>\n        </div>\n      </header>\n      <form class=\"form form-sign\" action=\"\" id=\"signRole\">\n        <div class=\"form__fields form__fields-role\">\n          <label class=\"form__card\">\n            <input name=\"role\" type=\"radio\" value=\"student\" hidden id=\"inputStudent\" required>\n            <label for=\"inputStudent\" class=\"form__card-picture\">\n              <img class=\"form__cart-image\" src=\"/assets/img/sign/student.png\" alt=\"Student\">\n            </label>\n            <div class=\"form__card-title\">\n              <span>Хочу изучать</span>\n              <span>итальянский</span>\n            </div>\n          </label>\n          <div class=\"form__card\">\n            <input name=\"role\" type=\"radio\" value=\"teacher\" hidden id=\"inputTeacher\" required>\n            <label for=\"inputTeacher\" class=\"form__card-picture\">\n              <img class=\"form__cart-image\" src=\"/assets/img/sign/teacher.png\" alt=\"Teacher\">\n            </label>\n            <div class=\"form__card-title\">\n              <span>Хочу обучать</span>\n              <span>итальянскому</span>\n            </div>\n          </div>\n        </div>\n        <button class=\"form__btn\">\n          Далее\n        </button>\n      </form>\n    </section>\n\n    <section class=\"sign__container\" data-signLevel>\n      <header class=\"sign__header\">\n        <header class=\"sign__logo\">\n          <img class=\"sign__logo-img\" src=\"/assets/img/logo.png\" alt=\"Fratelli\">\n        </header>\n        <div class=\"sign__header-title\">\n          Ваш уровень итальянского?\n        </div>\n        <div class=\"sign__subtitle\">\n          <span>Если вы не знаете свой уровень - пройдите тест на знание</span>\n          <span>итальянского в разделе <a class=\"sign__link\" href=\"/web/signin.html\">Тесты</a></span>\n        </div>\n      </header>\n      <form class=\"form form-sign\" action=\"\" id=\"signLevel\">\n        <div class=\"form__fields\">\n          <div class=\"form__item\">\n            <select class=\"form__input\" name=\"level\" placeholder=\"Выберите ваш уровень\" required>\n              <option value=\"A1\">A1</option>\n              <option value=\"A2\">A2</option>\n              <option value=\"B1\">B1</option>\n              <option value=\"B2\">B2</option>\n              <option value=\"C1\">C1</option>\n              <option value=\"C2\">C2</option>\n            </select>\n          </div>\n        </div>\n        <button class=\"form__btn\">\n          Далее\n        </button>\n      </form>\n    </section>\n\n    <section class=\"sign__container\" data-signEnd>\n      <header class=\"sign__header\">\n        <header class=\"sign__logo\">\n          <img class=\"sign__logo-img\" src=\"/assets/img/logo.png\" alt=\"Fratelli\">\n        </header>\n        <div class=\"sign__header-title\">\n          Ваш аккаунт успешно<br>\n          зарегестрирован!\n        </div>\n        <div class=\"sign__subtitle\">\n          <span>Продолжим путешествие?</span>\n        </div>\n      </header>\n      <form class=\"form\" action=\"\" id=\"signEnd\">\n        <div class=\"form__fields\"></div>\n        <button class=\"form__btn\" id=\"btnEnd\">\n          Далее\n        </button>\n      </form>\n    </section>\n  </main>\n\n  <script src=\"/js/jquery.js\"></script>\n  <script src=\"/js/sign/sign.js\"></script>\n</body>\n\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/signup.php b/web/signup.php
--- a/web/signup.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/web/signup.php	(date 1654103320105)
@@ -104,8 +104,8 @@
           Ваш уровень итальянского?
         </div>
         <div class="sign__subtitle">
-          <span>Если вы не знаете свой уровень - пройдите тест на знание</span>
-          <span>итальянского в разделе <a class="sign__link" href="/web/signin.html">Тесты</a></span>
+              <span>Если вы не знаете свой уровень - пройдите тест на знание</span>
+          <span>итальянского в разделе <a class="sign__link" href="/web/quiz-c1.php">Тесты</a></span>
         </div>
       </header>
       <form class="form form-sign" action="" id="signLevel">
Index: app/test/get-test.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n\nsession_start();\nrequire_once '../db.php';\n\nheader(\"Content-Type: application/json;\");\n\n\n$test_id = $_GET[\"test_id\"];\n\nif ($test_id) {\n    $selectTest = \"SELECT * FROM `test` WHERE `test_id` = '$test_id'\";\n    $selectQuestions = \"SELECT * FROM `question` WHERE `test_id` = '$test_id'\";\n\n    $testData = $db->query($selectTest)->fetch_assoc();\n    $questionsData = $db->query($selectQuestions);\n\n    $res = array(\n        \"test_id\" => $testData[\"test_id\"],\n        \"test_title\" => $testData[\"test_title\"],\n        \"test_time\" => $testData[\"test_time\"],\n        \"test_complexity\" => $testData[\"test_complexity\"],\n        \"test_level\" => $testData[\"test_level\"],\n        \"questions\" => [],\n        \"questions_count\" => 0\n    );\n\n    while ($question = $questionsData->fetch_assoc()) {\n        $question_id = $question[\"question_id\"];\n        $selectAnswer = \"SELECT * FROM `answer` WHERE `question_id` = '$question_id'\";\n        $answersData = $db->query($selectAnswer);\n\n        $question[\"answers\"] = array();\n\n        while ($answer = $answersData->fetch_assoc()) {\n            $answer[\"is_correct\"] = (bool)$answer[\"is_correct\"];\n            array_push($question[\"answers\"], $answer);\n        }\n\n        array_push($res[\"questions\"], $question);\n    }\n} else {\n    $selectTest = \"SELECT \n    t.`test_id`, t.`test_title`, t.`test_level`, t.`test_time`, t.`test_complexity`, t.`created_by`,\n    (SELECT COUNT(*) FROM `question` AS q WHERE q.`test_id` = t.`test_id`) as `questions_count`\n    FROM `test` AS t\";\n    $testsList = $db->query($selectTest);\n\n    $res = [];\n\n    while ($test = $testsList->fetch_assoc()) {\n        array_push($res, $test);\n    }\n}\n\n\n\necho json_encode($res, JSON_UNESCAPED_UNICODE);\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/test/get-test.php b/app/test/get-test.php
--- a/app/test/get-test.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/app/test/get-test.php	(date 1654103612533)
@@ -7,7 +7,7 @@
 header("Content-Type: application/json;");
 
 
-$test_id = $_GET["test_id"];
+$test_id = $_GET["test_id"] ?? 0;
 
 if ($test_id) {
     $selectTest = "SELECT * FROM `test` WHERE `test_id` = '$test_id'";
@@ -16,7 +16,7 @@
     $testData = $db->query($selectTest)->fetch_assoc();
     $questionsData = $db->query($selectQuestions);
 
-    $res = array(
+    $res = [
         "test_id" => $testData["test_id"],
         "test_title" => $testData["test_title"],
         "test_time" => $testData["test_time"],
@@ -24,7 +24,7 @@
         "test_level" => $testData["test_level"],
         "questions" => [],
         "questions_count" => 0
-    );
+    ];
 
     while ($question = $questionsData->fetch_assoc()) {
         $question_id = $question["question_id"];
@@ -44,7 +44,7 @@
     $selectTest = "SELECT 
     t.`test_id`, t.`test_title`, t.`test_level`, t.`test_time`, t.`test_complexity`, t.`created_by`,
     (SELECT COUNT(*) FROM `question` AS q WHERE q.`test_id` = t.`test_id`) as `questions_count`
-    FROM `test` AS t";
+    FROM `test` AS t WHERE test_id != 47";
     $testsList = $db->query($selectTest);
 
     $res = [];
Index: app/test/create-test.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n\n/* --------------------------------\n    REQUEST EXAMPLE IN JSON FORMAT:\n    POST:\n        {\n        \"test_title\": \"Тест Аллы Виленской\",\n        \"test_level\": \"A2\",\n        \"test_time\": 30,\n        \"test_complexety\": \"3/5\",\n        \"questions\": [\n            {\n                \"question_title\": \"Вы Алла Виленская?\",\n                \"question_desc\": \"Выберите вариант ответа\",\n                \"answers\": [\n                    {\n                        \"answer_title\": \"Да\",\n                        \"is_correct\": true\n                    },\n                    {\n                        \"answer_title\": \"Нет\",\n                        \"is_correct\": false\n                    },\n                    {\n                        \"answer_title\": \"Все варианты верны\",\n                        \"is_correct\": false\n                    },\n                    {\n                        \"answer_title\": \"Все варианты НЕверны\",\n                        \"is_correct\": false\n                    }\n                ]\n            }\n        ]\n        }\n\n    RESPONSE EXAMPLE IN JSON:\n\n    {\"test_id\":43,\"success\":true}\n\n*/\n\nsession_start();\nrequire_once '../db.php';\n\nheader(\"Content-Type: application/json;\");\n\ntry {\n    \n    $json = file_get_contents('php://input');\n    $req = json_decode($json, true);\n    $res = array(\"test_id\" => \"\", \"success\" => false);\n\n    $test_title = $req['test_title'];\n    $test_complexity = $req['test_complexity'];\n    $test_level = $req['test_level'];\n    $test_time = $req['test_time'];\n    $created_by = $_SESSION['user']['id'];\n        \n    $insertTestRow = \"INSERT INTO `test` \n        (`test_id`, `test_title`, `test_level`, `test_time`, `test_complexity`, `created_by`) VALUES\n        (NULL,'$test_title','$test_level','$test_time','$test_complexity', $created_by);\n    \";\n\n    $testCreated = mysqli_query($db, $insertTestRow);\n    $test_id = mysqli_insert_id($db);\n\n    $res[\"test_id\"] = $test_id;\n    $res[\"success\"] = $testCreated;\n\n    foreach ($req['questions'] as $question) {\n        $question_title = $question['question_title'];\n        $question_desc = $question['question_desc'];\n\n        $insertQuestionRow = \"INSERT INTO `question`\n            (`question_id`, `test_id`, `question_title`, `question_desc`) VALUES\n            (NULL, '$test_id', '$question_title', '$question_desc');\";\n\n        $createdQuestion = mysqli_query($db, $insertQuestionRow);\n        $res[\"success\"] = $res[\"success\"] && $createdQuestion;\n\n        $question_id = mysqli_insert_id($db);\n\n\n        $insertAnswerRow = \"INSERT INTO `answer`\n        (`answer_id`, `question_id`, `answer_title`, `is_correct`) VALUES \";\n\n        foreach ($question['answers'] as $answer) {\n            $is_correct = $answer['is_correct'] ? 1 : 0;\n            $answer_title = $answer['answer_title'];\n\n            $insertAnswerRow .= \"(NULL, '$question_id','$answer_title', $is_correct),\";\n        }\n\n        $query = substr($insertAnswerRow, 0, -1).\";\";\n        $createdAnswers = mysqli_query($db, $query);\n\n        $res[\"success\"] = $res[\"success\"] && $createdAnswers;\n    }\n\n    echo json_encode($res, JSON_UNESCAPED_UNICODE);\n\n} catch (\\Exception $e) {\n\n    echo $e->getMessage();\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/test/create-test.php b/app/test/create-test.php
--- a/app/test/create-test.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/app/test/create-test.php	(date 1654101031034)
@@ -8,7 +8,7 @@
         "test_title": "Тест Аллы Виленской",
         "test_level": "A2",
         "test_time": 30,
-        "test_complexety": "3/5",
+        "test_complexity": "3/5",
         "questions": [
             {
                 "question_title": "Вы Алла Виленская?",
@@ -50,7 +50,7 @@
     
     $json = file_get_contents('php://input');
     $req = json_decode($json, true);
-    $res = array("test_id" => "", "success" => false);
+    $res = ["test_id" => "", "success" => false];
 
     $test_title = $req['test_title'];
     $test_complexity = $req['test_complexity'];
@@ -72,20 +72,19 @@
     foreach ($req['questions'] as $question) {
         $question_title = $question['question_title'];
         $question_desc = $question['question_desc'];
+        $question_type = $question['type'];
 
         $insertQuestionRow = "INSERT INTO `question`
-            (`question_id`, `test_id`, `question_title`, `question_desc`) VALUES
-            (NULL, '$test_id', '$question_title', '$question_desc');";
+            (`question_id`, `test_id`, `question_title`, `question_desc`, `type`) VALUES
+            (NULL, '$test_id', '$question_title', '$question_desc', $question_type);";
 
         $createdQuestion = mysqli_query($db, $insertQuestionRow);
         $res["success"] = $res["success"] && $createdQuestion;
 
         $question_id = mysqli_insert_id($db);
 
-
         $insertAnswerRow = "INSERT INTO `answer`
         (`answer_id`, `question_id`, `answer_title`, `is_correct`) VALUES ";
-
         foreach ($question['answers'] as $answer) {
             $is_correct = $answer['is_correct'] ? 1 : 0;
             $answer_title = $answer['answer_title'];
@@ -95,7 +94,6 @@
 
         $query = substr($insertAnswerRow, 0, -1).";";
         $createdAnswers = mysqli_query($db, $query);
-
         $res["success"] = $res["success"] && $createdAnswers;
     }
 
Index: web/quiz-add.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nsession_start();\n$page_title = \"Создание теста\"\n\n?>\n\n<?php include \"../layout/meta.php\"; ?>\n\n<style>\n  .form__item.answer {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n\n  .form__item.answer input[type=\"radio\"] {\n    background-color: #000;\n    width: 24px;\n    height: 24px;\n  }\n</style>\n\n<body>\n  <?php include \"../layout/side-menu.php\" ?>\n  <main class=\"container container__aside\">\n    <div class=\"head\">\n      <div class=\"head__info\">\n        <div class=\"head__title\">Создание теста</div>\n        <div class=\"head__subtitle\"></div>\n      </div>\n      <div class=\"head__nav\">\n        <div class=\"btn\" data-add>\n          Добавить тест\n        </div>\n      </div>\n    </div>\n    <div class=\"\">\n      <div class=\"test\">\n        <h2>Информация о тесте</h2>\n        <form class=\"form\" action=\"\" id=\"title\">\n          <div class=\"form__fields\">\n            <div class=\"form__item\">\n              <input class=\"form__input\" name=\"test_title\" type=\"text\" placeholder=\"Название группы\" required>\n            </div>\n            <div class=\"form__item\">\n              <select class=\"form__input\" name=\"test_level\" placeholder=\"Выберите ваш уровень\" required>\n                <option value=\"A1\">A1</option>\n                <option value=\"A2\">A2</option>\n                <option value=\"B1\">B1</option>\n                <option value=\"B2\">B2</option>\n                <option value=\"C1\">C1</option>\n                <option value=\"C2\">C2</option>\n              </select>\n            </div>\n            <div class=\"form__item\">\n              <input class=\"form__input\" name=\"test_time\" type=\"text\" placeholder=\"Примерное время прохождения\" required>\n            </div>\n            <div class=\"form__item\">\n              <input class=\"form__input\" name=\"test_complexety\" type=\"text\" placeholder=\"Порог в формате < 3/5 >\">\n            </div>\n          </div>\n        </form>\n        <h2>Вопросы</h2>\n        <div class=\"question__list\">\n\n          <form class=\"form question__form\">\n            <div class=\"form__fields\">\n              <div class=\"form__item\">\n                <input class=\"form__input\" name=\"question_title\" type=\"text\" placeholder=\"Название вопроса\" value=\"Вопрос 1\" required>\n              </div>\n              <div class=\"form__item\">\n                <input class=\"form__input\" name=\"question_desc\" placeholder=\"Текст вопроса\">\n              </div>\n              <form class=\"form\" action=\"\">\n                <div class=\"form__fields\">\n                  <div class=\"form__item answer\">\n                    <input type=\"radio\" name=\"is_correct\" value=\"1\">\n                    <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\" required>\n                  </div>\n                  <div class=\"form__item answer\">\n                    <input type=\"radio\" name=\"is_correct\" value=\"2\">\n                    <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\" required>\n                  </div>\n                  <div class=\"form__item answer\">\n                    <input type=\"radio\" name=\"is_correct\" value=\"3\">\n                    <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\" required>\n                  </div>\n                  <div class=\"form__item answer\">\n                    <input type=\"radio\" name=\"is_correct\" value=\"4\">\n                    <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\" required>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </form>\n\n        </div>\n        <div class=\"btn btn-gray\" id=\"add\">Добавить вопрос</div>\n      </div>\n      <div class=\"\">\n\n      </div>\n    </div>\n  </main>\n\n\n  <script src=\"../js/quiz/quiz-add.js\"></script>\n</body>\n\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/quiz-add.php b/web/quiz-add.php
--- a/web/quiz-add.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/web/quiz-add.php	(date 1654099987652)
@@ -57,7 +57,7 @@
               <input class="form__input" name="test_time" type="text" placeholder="Примерное время прохождения" required>
             </div>
             <div class="form__item">
-              <input class="form__input" name="test_complexety" type="text" placeholder="Порог в формате < 3/5 >">
+              <input class="form__input" name="test_complexity" type="text" placeholder="Порог в формате < 3/5 >">
             </div>
           </div>
         </form>
Index: web/quiz-c1.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/web/quiz-c1.php b/web/quiz-c1.php
new file mode 100644
--- /dev/null	(date 1654103320113)
+++ b/web/quiz-c1.php	(date 1654103320113)
@@ -0,0 +1,20 @@
+<?php
+
+session_start();
+$id = 47;
+$page_title = "Тест";
+
+?>
+
+<?php include "../layout/meta.php"; ?>
+
+<body>
+  <main class="container__aside">
+    <div id="testContainer"></div>
+    <div class="" id="result"></div>
+  </main>
+
+  <script src="../js/quiz/get-one-quiz.js"></script>
+</body>
+
+</html>
\ No newline at end of file
Index: js/quiz/quiz-add.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const addBtn = document.querySelector('#add')\nconst questionList = document.querySelector('.question__list')\nconst add = document.querySelector('[data-add]')\nlet counter = 1;\n\naddBtn.addEventListener(\"click\", async () => {\n  addQuestion()\n})\n\nadd.addEventListener(\"click\", async () => {\n  packQuestion()\n})\n\nconst addQuestion = () => {\n  counter++\n  let form = document.createElement('form');\n  form.className = 'form question__form'\n  form.innerHTML = `\n  <form class=\"form question__form\">\n    <div class=\"form__fields\">\n      <div class=\"form__item\">\n        <input class=\"form__input\" name=\"question_title\" type=\"text\" placeholder=\"Название вопроса\" value=\"Вопрос ${counter}\" required>\n      </div>\n      <div class=\"form__item\">\n        <input class=\"form__input\" name=\"question_desc\" placeholder=\"Текст вопроса\">\n      </div>\n      <form class=\"form\" action=\"\">\n        <div class=\"form__fields\">\n          <div class=\"form__item answer\">\n            <input type=\"radio\" name=\"is_correct\" value=\"1\">\n            <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\">\n          </div>\n          <div class=\"form__item answer\">\n            <input type=\"radio\" name=\"is_correct\" value=\"2\">\n            <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\">\n          </div>\n          <div class=\"form__item answer\">\n            <input type=\"radio\" name=\"is_correct\" value=\"3\">\n            <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\">\n          </div>\n          <div class=\"form__item answer\">\n            <input type=\"radio\" name=\"is_correct\" value=\"4\">\n            <input class=\"form__input\" name=\"answer_title\" type=\"text\" placeholder=\"Текст ответа\">\n          </div>\n           <div class=\"form__item answer\">\n            <input type=\"text\" name=\"is_correct\">\n          </div>\n        </div>\n      </form>\n    </div>\n  </form>\n  `\n\n  questionList.append(form)\n}\n\n\nlet json = {}\nconst packQuestion = async () => {\n  const questions = document.querySelectorAll('.question__form')\n  const test_title = (document.querySelector('[name=test_title]')).value\n  const test_level = (document.querySelector('[name=test_level]')).value\n  const test_time = (document.querySelector('[name=test_time]')).value\n  const test_complexety = (document.querySelector('[name=test_complexety]')).value\n\n  json.test_title = test_title;\n  json.test_level = test_level;\n  json.test_time = test_time;\n  json.test_complexety = test_complexety;\n\n  let questionsList = []\n  questions.forEach(element => {\n    let json = {}\n    const question_title = (element.querySelector('[name=question_title]')).value\n    const question_desc = (document.querySelector('[name=question_desc]')).value\n    json.question_title = question_title;\n    json.question_desc = question_desc;\n    \n    const answerList = element.querySelectorAll('.answer')\n    let answers = []\n    answerList.forEach(answer => {\n      let json = {}\n      const answer_title = (answer.querySelector('[name=answer_title]')).value\n      let is_correct = ''\n      if (answer.querySelector('[name=is_correct]').checked) {\n        is_correct = 'true';\n      } else {\n        is_correct = 'false';\n      }\n      json.answer_title = answer_title\n      json.is_correct = is_correct\n\n      answers.push(json)\n    })\n    json.answers = answers\n    questionsList.push(json)\n  })\n  json.questions = questionsList\n\n  const res = await addTestDb(json)\n  console.log(res);\n}\n\nconst addTestDb = async (json) => {\n  const res = await fetch(`${baseApi}/test/create-test.php`, {\n    method: \"POST\",\n    body: JSON.stringify(json),\n  });\n\n  return res.json();\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/js/quiz/quiz-add.js b/js/quiz/quiz-add.js
--- a/js/quiz/quiz-add.js	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/js/quiz/quiz-add.js	(date 1654100928212)
@@ -61,12 +61,12 @@
   const test_title = (document.querySelector('[name=test_title]')).value
   const test_level = (document.querySelector('[name=test_level]')).value
   const test_time = (document.querySelector('[name=test_time]')).value
-  const test_complexety = (document.querySelector('[name=test_complexety]')).value
+  const test_complexity = (document.querySelector('[name=test_complexity]')).value
 
   json.test_title = test_title;
   json.test_level = test_level;
   json.test_time = test_time;
-  json.test_complexety = test_complexety;
+  json.test_complexity = test_complexity;
 
   let questionsList = []
   questions.forEach(element => {
@@ -75,7 +75,8 @@
     const question_desc = (document.querySelector('[name=question_desc]')).value
     json.question_title = question_title;
     json.question_desc = question_desc;
-    
+    json.type = 0;
+
     const answerList = element.querySelectorAll('.answer')
     let answers = []
     answerList.forEach(answer => {
Index: app/word/get-words.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nsession_start();\nrequire_once '../db.php';\nrequire_once 'word_state.php';\n\nheader(\"Content-Type: application/json;\");\n\ntry {\n    \n    $user_id = $_SESSION['user']['id'];\n\n    $state = $_GET[\"state\"];\n\n    if (isValidState($state)) {\n        $selectWords = \"SELECT * FROM `user_word` AS `uw` LEFT JOIN `word` AS `w` ON `w`.`word_id` = `uw`.`word_id` WHERE `uw`.`state` = '$state'\";\n\n        $words_list = [];\n        $rows = $db->query($selectWords);\n\n        while ($row = $rows->fetch_assoc()) {\n            array_push($words_list, $row);\n        }\n\n        echo json_encode($words_list);\n    } else {\n        $selectWords = \"SELECT * FROM `word`\";\n\n        $words_list = []; \n    \n        $rows = $db->query($selectWords);\n    \n        while($row = $rows->fetch_assoc()) {\n            array_push($words_list, $row);\n        }\n    \n        echo json_encode($words_list);\n    }\n\n    \n\n} catch (Exception $e) {\n    echo json_encode(array(\n        \"error\" => $e->getMessage(),\n        \"success\" => false\n    ));\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/word/get-words.php b/app/word/get-words.php
--- a/app/word/get-words.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/app/word/get-words.php	(date 1654004637842)
@@ -10,7 +10,7 @@
     
     $user_id = $_SESSION['user']['id'];
 
-    $state = $_GET["state"];
+    $state = $_GET["state"] ?? '';
 
     if (isValidState($state)) {
         $selectWords = "SELECT * FROM `user_word` AS `uw` LEFT JOIN `word` AS `w` ON `w`.`word_id` = `uw`.`word_id` WHERE `uw`.`state` = '$state'";
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b5778a18-996a-4c02-8f09-7d34fedec0c8\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/app/lesson/get-lesson.php\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/app/lesson/get-lesson.php\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/js/lesson-list.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/js/lesson-list.js\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ComposerSettings\">\n    <execution />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"29t1OfRGnNweoMzusAI3yYPhZ5T\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"last_opened_file_path\": \"/var/www/html\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b5778a18-996a-4c02-8f09-7d34fedec0c8\" name=\"Changes\" comment=\"\" />\n      <created>1653917536935</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1653917536935</updated>\n      <workItem from=\"1653917538127\" duration=\"216000\" />\n      <workItem from=\"1653983749941\" duration=\"12465000\" />\n      <workItem from=\"1654003978132\" duration=\"486000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/.idea/workspace.xml	(date 1654104236122)
@@ -5,9 +5,17 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b5778a18-996a-4c02-8f09-7d34fedec0c8" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/web/quiz-c1.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/app/lesson/get-lesson.php" beforeDir="false" afterPath="$PROJECT_DIR$/app/lesson/get-lesson.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/js/lesson-list.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/lesson-list.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/db.php" beforeDir="false" afterPath="$PROJECT_DIR$/app/db.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/test/create-test.php" beforeDir="false" afterPath="$PROJECT_DIR$/app/test/create-test.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/test/get-test.php" beforeDir="false" afterPath="$PROJECT_DIR$/app/test/get-test.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/app/word/get-words.php" beforeDir="false" afterPath="$PROJECT_DIR$/app/word/get-words.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/quiz/get-one-quiz.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/quiz/get-one-quiz.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/js/quiz/quiz-add.js" beforeDir="false" afterPath="$PROJECT_DIR$/js/quiz/quiz-add.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/layout/meta.php" beforeDir="false" afterPath="$PROJECT_DIR$/layout/meta.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/quiz-add.php" beforeDir="false" afterPath="$PROJECT_DIR$/web/quiz-add.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/web/signup.php" beforeDir="false" afterPath="$PROJECT_DIR$/web/signup.php" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -27,6 +35,16 @@
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
+  </component>
+  <component name="PhpDebugGeneral" listening_started="true" />
+  <component name="PhpServers">
+    <servers>
+      <server host="localhost" id="c59272c3-268d-4cd9-b01b-dc8f4cf8a39b" name="localhost" use_path_mappings="true">
+        <path_mappings>
+          <mapping local-root="$PROJECT_DIR$" remote-root="/var/www/html" />
+        </path_mappings>
+      </server>
+    </servers>
   </component>
   <component name="ProjectId" id="29t1OfRGnNweoMzusAI3yYPhZ5T" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
@@ -39,7 +57,7 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "/var/www/html",
+    "last_opened_file_path": "/var/www/html/web",
     "node.js.detected.package.eslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
@@ -47,6 +65,16 @@
     "vue.rearranger.settings.migration": "true"
   }
 }]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/web" />
+    </key>
+  </component>
+  <component name="RunManager">
+    <configuration name="loc" type="PhpWebAppRunConfigurationType" factoryName="PHP Web Application" server_name="localhost" start_url="/app/test/create-test.php">
+      <method v="2" />
+    </configuration>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -57,7 +85,8 @@
       <updated>1653917536935</updated>
       <workItem from="1653917538127" duration="216000" />
       <workItem from="1653983749941" duration="12465000" />
-      <workItem from="1654003978132" duration="486000" />
+      <workItem from="1654003978132" duration="1436000" />
+      <workItem from="1654098246375" duration="5986000" />
     </task>
     <servers />
   </component>
@@ -75,4 +104,20 @@
       </map>
     </option>
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="php">
+          <url>file://$PROJECT_DIR$/app/test/create-test.php</url>
+          <line>50</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="php">
+          <url>file://$PROJECT_DIR$/app/test/save-result.php</url>
+          <line>68</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+  </component>
 </project>
\ No newline at end of file
Index: app/db.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\nini_set('error_reporting', E_ALL);\nini_set('display_errors', 1);\nini_set('display_startup_errors', 1);\n$db = mysqli_connect(\n  'localhost',\n  'root',\n  'root',\n  'fratteli'\n);\n\nif (!$db) {\n  die('Error connect to DataBase');\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/db.php b/app/db.php
--- a/app/db.php	(revision 3ade0b1d97020dac59dfa4f3a92bcdb7a6bc4708)
+++ b/app/db.php	(date 1654100686990)
@@ -4,8 +4,8 @@
 ini_set('display_startup_errors', 1);
 $db = mysqli_connect(
   'localhost',
-  'root',
-  'root',
+  'fratteli',
+  '123QWEfghnm,',
   'fratteli'
 );
 
